services:
    db:
        build: 
            context: .
            dockerfile: Dockerfile.mysqldb
            args:
                MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
                DB_USERNAME: ${DB_USERNAME}
                DB_PASSWORD: ${DB_PASSWORD}
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: pdf_system
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        image: mysql:8.3.0
        volumes:
            - db_data:/var/lib/mysql
        ports:
            - "3307:3306"
        healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            interval: 20s
            timeout: 10s
            retries: 10
    frontend:
        build: 
            context: .
            dockerfile: Dockerfile.frontend
            args:
                HOST_IP: ${HOST_IP}
        ports:
            - "5000:5000"
        volumes:
            - ./app/src:/usr/src/app/src
    api:
        build: 
            context: .
            dockerfile: Dockerfile.api
            args:
                DB_USERNAME: ${DB_USERNAME}
                DB_PASSWORD: ${DB_PASSWORD}
                SECRET_KEY: ${SECRET_KEY}
                HOST_IP: ${HOST_IP}
        environment:
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
            SECRET_KEY: ${SECRET_KEY}
            HOST_IP: ${HOST_IP}
            ENGINE: mysql
            ADAPTER: pymysql
            ASYNC_ADAPTER: aiomysql
            DB_NAME: pdf_system
            TEST_DB_NAME: test_pdf_system
            ALGORITHM: HS256
            ACCESS_TOKEN_EXPIRE_MINUTES: 10060
            LOCAL_DB_MODE: False
            MYSQL_PORT: 3306
            MYSQL_HOSTNAME: db
        ports:
            - "8000:8000"
        depends_on:
            db:
                condition: service_healthy
        env_file:
            - .env
        volumes:
            - ./back-end:/app
volumes:
    db_data: